/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Hotel;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author emin yasir corut
 */
public class Customer extends javax.swing.JFrame {

    int idSelected;
    Database db = new Database();//I have included another class  to connect to the database.
    DefaultTableModel tbl_costumersModel;// I created DefaultTableModel to retrieve the data from the Customer database.

    /**
     * Creates new form User
     */
    public Customer() {
        initComponents();

        tbl_costumersModel = db.GetCustomers();//I get Customer data from the database class.

        tbl_costumer.setModel(tbl_costumersModel);//I'm transferring the data to the customer table.

        cmbbox_country.setModel(new javax.swing.DefaultComboBoxModel(getAllCountries()));//function to add all countries into combobox in

        //closing the appearance of labels to show errors arising from regex controls
        lbl_tcno.setVisible(false);
        lbl_name.setVisible(false);
        lbl_surname.setVisible(false);
        lbl_email.setVisible(false);
        lbl_phone.setVisible(false);
        lbl_birthday.setVisible(false);
    }

    public String[] getAllCountries() {// import all countries into combobox
        String[] countries = new String[Locale.getISOCountries().length];
        String[] countryCodes = Locale.getISOCountries();
        for (int i = 0; i < countryCodes.length; i++) {
            Locale obj = new Locale("", countryCodes[i]);
            countries[i] = obj.getDisplayCountry();

        }
        return countries;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel2 = new javax.swing.JLabel();
        txt_name = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txt_surname = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txt_email = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txt_phone = new javax.swing.JFormattedTextField();
        btn_Customeradd = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        txt_searchbox = new javax.swing.JTextField();
        btn_Customerdelete = new javax.swing.JButton();
        btn_Customerupdate = new javax.swing.JButton();
        txt_tcNo = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_costumer = new javax.swing.JTable();
        rdbtn_male = new javax.swing.JRadioButton();
        rdbtn_female = new javax.swing.JRadioButton();
        checkbox_ismarried = new javax.swing.JCheckBox();
        cmbbox_country = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txt_birthday = new javax.swing.JFormattedTextField();
        btn_back = new javax.swing.JButton();
        lbl_tcno = new javax.swing.JLabel();
        lbl_name = new javax.swing.JLabel();
        lbl_surname = new javax.swing.JLabel();
        lbl_email = new javax.swing.JLabel();
        lbl_phone = new javax.swing.JLabel();
        lbl_birthday = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Royal Hotel Customer Page");
        setBackground(new java.awt.Color(0, 0, 204));
        setLocation(new java.awt.Point(330, 85));
        setMaximumSize(new java.awt.Dimension(1025, 750));
        setMinimumSize(new java.awt.Dimension(1025, 750));
        setPreferredSize(new java.awt.Dimension(1025, 750));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        jLabel2.setText("T.C. No");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 13, -1, -1));
        jLabel2.getAccessibleContext().setAccessibleName("lblRole");

        getContentPane().add(txt_name, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 60, 321, -1));

        jLabel3.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        jLabel3.setText("Name");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, -1, -1));

        jLabel5.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        jLabel5.setText("Surname");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, -1, -1));
        getContentPane().add(txt_surname, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 100, 321, -1));

        jLabel6.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        jLabel6.setText("Email");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(523, 11, -1, -1));
        getContentPane().add(txt_email, new org.netbeans.lib.awtextra.AbsoluteConstraints(664, 11, 330, -1));

        jLabel7.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        jLabel7.setText("Phone");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 60, -1, -1));

        try {
            txt_phone.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("+##-###-###-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        getContentPane().add(txt_phone, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 60, 330, -1));

        btn_Customeradd.setIcon(new javax.swing.ImageIcon("C:\\Users\\emin yasir corut\\Desktop\\HOTEL-Proje\\follow.png")); // NOI18N
        btn_Customeradd.setText("Add");
        btn_Customeradd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_CustomeraddActionPerformed(evt);
            }
        });
        getContentPane().add(btn_Customeradd, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 220, 128, 39));

        jLabel11.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        jLabel11.setText("Search Name");
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 230, -1, -1));

        txt_searchbox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_searchboxKeyReleased(evt);
            }
        });
        getContentPane().add(txt_searchbox, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 230, 225, -1));

        btn_Customerdelete.setIcon(new javax.swing.ImageIcon("C:\\Users\\emin yasir corut\\Desktop\\HOTEL-Proje\\x-button.png")); // NOI18N
        btn_Customerdelete.setText("Delete");
        btn_Customerdelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_CustomerdeleteActionPerformed(evt);
            }
        });
        getContentPane().add(btn_Customerdelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 220, 128, 39));

        btn_Customerupdate.setIcon(new javax.swing.ImageIcon("C:\\Users\\emin yasir corut\\Desktop\\HOTEL-Proje\\sync-512.png")); // NOI18N
        btn_Customerupdate.setText("Update");
        btn_Customerupdate.setEnabled(false);
        btn_Customerupdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_CustomerupdateActionPerformed(evt);
            }
        });
        getContentPane().add(btn_Customerupdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 220, 128, 39));
        getContentPane().add(txt_tcNo, new org.netbeans.lib.awtextra.AbsoluteConstraints(139, 11, 321, -1));

        jLabel1.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        jLabel1.setText("Birthday");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 110, 60, -1));

        tbl_costumer.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tbl_costumer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_costumerMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbl_costumer);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 280, 984, 380));

        buttonGroup1.add(rdbtn_male);
        rdbtn_male.setText("Male");
        getContentPane().add(rdbtn_male, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 150, -1, -1));

        buttonGroup1.add(rdbtn_female);
        rdbtn_female.setText("Female");
        getContentPane().add(rdbtn_female, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 150, -1, -1));

        checkbox_ismarried.setText("Married");
        getContentPane().add(checkbox_ismarried, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 190, -1, -1));

        getContentPane().add(cmbbox_country, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 160, 110, -1));

        jLabel4.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        jLabel4.setText("Gender");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 150, -1, -1));

        jLabel8.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        jLabel8.setText("IsMarried");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 190, -1, -1));

        jLabel9.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        jLabel9.setText("Country");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 160, -1, -1));

        try {
            txt_birthday.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        getContentPane().add(txt_birthday, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 110, 110, -1));

        btn_back.setIcon(new javax.swing.ImageIcon("C:\\Users\\emin yasir corut\\Desktop\\HOTEL-Proje\\back.png")); // NOI18N
        btn_back.setText("BACK");
        btn_back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_backActionPerformed(evt);
            }
        });
        getContentPane().add(btn_back, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 670, 90, 30));
        getContentPane().add(lbl_tcno, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 40, 320, -1));
        getContentPane().add(lbl_name, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 80, 320, -1));
        getContentPane().add(lbl_surname, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 130, 320, -1));
        getContentPane().add(lbl_email, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 40, 330, -1));
        getContentPane().add(lbl_phone, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 90, 330, -1));
        getContentPane().add(lbl_birthday, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 140, 200, -1));

        jLabel10.setIcon(new javax.swing.ImageIcon("C:\\Users\\emin yasir corut\\Desktop\\HOTEL-Proje\\customer_background.jpg")); // NOI18N
        jLabel10.setMaximumSize(new java.awt.Dimension(1030, 750));
        jLabel10.setMinimumSize(new java.awt.Dimension(1030, 750));
        jLabel10.setPreferredSize(new java.awt.Dimension(1030, 750));
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -6, 1010, 720));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_CustomeraddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_CustomeraddActionPerformed
        // TODO add your handling code here:

        //at first, I checked to see if they were all empty. and then I made it mandatory that those entered using Regex be under a certain condition.
        // if the data entered is not like the desired condition, errors are written in the labels.
        if (txt_tcNo.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please Do Not Leave Any Free Space");
            return;
        } else {
            Matcher matcher;
            matcher = Pattern.compile("^[0-9]{11}$").matcher(txt_tcNo.getText());
            if (!matcher.find()) {
                lbl_tcno.setText("TC No Must Be Like 25465535847");
                lbl_tcno.setVisible(true);
                return;
            } else {
                lbl_tcno.setVisible(false);
            }
        }
        if (txt_name.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please Do Not Leave Any Free Space");
            return;
        } else {
            Matcher matcher;
            matcher = Pattern.compile("^([A-Z][a-z]+([ ]?[a-z]?['-]?[A-Z][a-z]+)*)$").matcher(txt_name.getText());//
            if (!matcher.find()) {
                lbl_name.setText("Name Must Be Least 3 Character,Most 16 Character and No Number");
                lbl_name.setVisible(true);
                return;
            } else {
                lbl_name.setVisible(false);
            }
        }
        if (txt_surname.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please Do Not Leave Any Free Space");
            return;
        } else {
            Matcher matcher;
            matcher = Pattern.compile("^[a-zA-Z_]{3,16}$").matcher(txt_surname.getText());//
            if (!matcher.find()) {
                lbl_surname.setText("Surname Must Be Least 3 Character,Most 16 Character and No Number");
                lbl_surname.setVisible(true);
                return;
            } else {
                lbl_surname.setVisible(false);
            }
        }
        if (txt_email.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please Do Not Leave Any Free Space");
            return;
        } else {
            Matcher matcher;
            matcher = Pattern.compile("^([\\w][\\w\\d]+)@(gmail|hotmail)(.com)$").matcher(txt_email.getText());//
            if (!matcher.find()) {
                lbl_email.setText("Email Must Be Like hasan58@gmail.com");
                lbl_email.setVisible(true);
                return;
            } else {
                lbl_email.setVisible(false);
            }
        }
        if (txt_phone.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please Do Not Leave Any Free Space");
            return;
        } else {
            Matcher matcher;
            matcher = Pattern.compile("^\\s*(?:\\+?(\\d{1,3}))?[-. (]*(\\d{3})[-. )]*(\\d{3})[-. ]*(\\d{4})(?: *x(\\d+))?\\s*$").matcher(txt_phone.getText());//
            if (!matcher.find()) {
                lbl_phone.setText("Phone Must Be Like +06-539-555-2933");
                lbl_phone.setVisible(true);
                return;
            } else {
                lbl_phone.setVisible(false);
            }
        }

        if (txt_birthday.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please Do Not Leave Any Free Space");
            return;
        } else {
            Matcher matcher;
            matcher = Pattern.compile("^\\d{2}/\\d{2}/\\d{4}$").matcher(txt_birthday.getText());//
            if (!matcher.find()) {
                lbl_birthday.setText("Birthday Must Be Like 15/06/2006");
                lbl_birthday.setVisible(true);
                return;
            } else {
                lbl_birthday.setVisible(false);
            }
        }

        // after checking the accuracy of the entered data, I pulled the data from the screen by Type.
        String name = txt_name.getText();
        String surname = txt_surname.getText();
        String tcNo = txt_tcNo.getText();
        String email = txt_email.getText();
        String phone = txt_phone.getText();
        String birthday = txt_birthday.getText();
        String country = (String) cmbbox_country.getSelectedItem();
        String isMarried;
        if (checkbox_ismarried.isSelected()) {
            isMarried = "Married";
        } else {
            isMarried = "Single";
        }
        String gender;
        if (rdbtn_female.isSelected()) {
            gender = "Female";
        } else {
            gender = "Male";
        }

        //goes to the insert Customer function.
        InsertCustomer(tcNo, name, surname, email, phone, country, gender, isMarried, birthday);

        //I pulled the data and projected it into the table.
        tbl_costumersModel = db.GetCustomers();
        tbl_costumer.setModel(tbl_costumersModel);

        Clear();// goes to the cleaning function to delete the entered data after the end of the transaction


    }//GEN-LAST:event_btn_CustomeraddActionPerformed

    private void btn_CustomerdeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_CustomerdeleteActionPerformed
        // TODO add your handling code here:

        int row = tbl_costumer.getSelectedRow();//I GOT THE SELECTED LINE
        int id = (int) tbl_costumer.getValueAt(row, 0);//I get the ID of the customer
        Delete(id);//going to the function for deletion
        //I pulled the data and projected it into the table.
        tbl_costumersModel = db.GetCustomers();
        tbl_costumer.setModel(tbl_costumersModel);

    }//GEN-LAST:event_btn_CustomerdeleteActionPerformed

    private void btn_CustomerupdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_CustomerupdateActionPerformed
        // TODO add your handling code here:

        Update();//goes to the function for update.
        btn_Customerupdate.setEnabled(false);
        Clear();//goes to the cleaning function to delete the entered data after the end of the transaction
    }//GEN-LAST:event_btn_CustomerupdateActionPerformed

    private void txt_searchboxKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_searchboxKeyReleased
        // TODO add your handling code here:

        //according to the input entered, the person matching the database is reflected in the table.
        String text = txt_searchbox.getText();
        //goes to the database class for the match operation in the database.
        tbl_costumersModel = db.GetCustomerBySearchText(text);
        tbl_costumer.setModel(tbl_costumersModel);// and projected it into the customer table.


    }//GEN-LAST:event_txt_searchboxKeyReleased

    private void tbl_costumerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_costumerMouseClicked
        // TODO add your handling code here:
        if (SwingUtilities.isRightMouseButton(evt)) {// the process of selecting rows from a table with the mouse
            if (tbl_costumer.getSelectedRow() > -1) {
                // I get the ID of the customer in the selected line
                int row = tbl_costumer.getSelectedRow();
                idSelected = (int) tbl_costumersModel.getValueAt(row, 0);

                GetDataWihtId(idSelected);// going to the GetDataWithId function to print information from the selected line to textboxes
                btn_Customerupdate.setEnabled(true);
            }
        }
    }//GEN-LAST:event_tbl_costumerMouseClicked

    private void btn_backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_backActionPerformed
        // TODO add your handling code here:

        this.dispose();// closes Customer page , opens Main page
        new Main().setVisible(true);
    }//GEN-LAST:event_btn_backActionPerformed

    public void GetDataWihtId(int id) {//I reflect the table according to the id of the selected row.

        tbl_costumersModel.setRowCount(0);//we reset the number of rows so that it does not add on top of the previous information
        try {
            // connect to the database
            Connection conn = DriverManager.getConnection("jdbc:derby://localhost:1527/UserDB", "sa", "as");//I enter the database location and add the username and password
            Statement stmt = conn.createStatement();
            String query = "SELECT * FROM CUSTOMER WHERE CUSTOMER_ID=" + id;// according to the incoming id, I get the customer from the database
            ResultSet rs = stmt.executeQuery(query);
            while (rs.next()) {
                // after identifying the customer, I pull their information according to their type. then I print their information on the screen
                String tcNo = rs.getString("TC_NO");
                String name = rs.getString("NAME");
                String surname = rs.getString("SURNAME");
                String birthday = rs.getString("BIRTHDAY");
                String email = rs.getString("EMAİL");
                String phone = rs.getString("PHONE");
                String gender = rs.getString("GENDER");
                String isMarried = rs.getString("IS_MARRIED");
                String country = rs.getString("COUNTRY");

                txt_tcNo.setText(tcNo);
                txt_name.setText(name);
                txt_surname.setText(surname);
                txt_birthday.setText(birthday);
                txt_email.setText(email);
                txt_phone.setText(phone);
                //cmbbox_country.setSelectedIndex(number);///????!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
                if (gender.equals("Male")) {
                    rdbtn_male.setSelected(true);
                } else {
                    rdbtn_female.setSelected(true);
                }
                if (isMarried.equals("Married")) {
                    checkbox_ismarried.setSelected(true);
                } else {
                    checkbox_ismarried.setSelected(false);
                }

            }
            conn.close();

        } catch (SQLException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }
        //updating the table
        tbl_costumersModel = db.GetCustomers();
        tbl_costumer.setModel(tbl_costumersModel);
    }

    public void Update() {

        try {
            //I get the changed information.
            String tcNo = txt_tcNo.getText();
            String name = txt_name.getText();
            String surname = txt_surname.getText();
            String birthday = txt_birthday.getText();
            String email = txt_email.getText();
            String phone = txt_phone.getText();
            String country = (String) cmbbox_country.getSelectedItem();
            String isMarried;
            if (checkbox_ismarried.isSelected()) {
                isMarried = "Married";
            } else {
                isMarried = "Single";
            }
            String gender;
            if (rdbtn_female.isSelected()) {
                gender = "Female";
            } else {
                gender = "Male";
            }
            // I update the customer's database information on the selected row along with the changed information
            Connection conn = DriverManager.getConnection("jdbc:derby://localhost:1527/USerDB", "sa", "as");//I enter the database location and add the username and password
            Statement stmt = conn.createStatement();
            String query = "UPDATE CUSTOMER SET TC_NO='" + tcNo + "',NAME='" + name + "',SURNAME='" + surname + "', EMAIL='" + email
                    + "', PHONE='" + phone + "',COUNTRY='" + country + "',GENDER='" + gender + "',IS_MARRIED='" + isMarried + "',BIRTHDAY='" + birthday + "' WHERE CUSTOMER_ID=" + idSelected;
            stmt.executeUpdate(query);
            conn.close();

        } catch (SQLException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }
        //updating the table
        tbl_costumersModel = db.GetCustomers();
        tbl_costumer.setModel(tbl_costumersModel);
    }

    public boolean InsertCustomer(String tcNo, String name, String surname, String email, String phone, String country, String gender, String isMarried, String birthday) {
        boolean rvalue = false;
        Connection conn = null;
        try {
            conn = DriverManager.getConnection("jdbc:derby://localhost:1527/UserDB", "sa", "as");//I enter the database location and add the username and password.
            Statement stmt = conn.createStatement();//javasql.statment ı seçtik
            String query = "SELECT CUSTOMER_ID FROM CUSTOMER ORDER BY CUSTOMER_ID DESC";//AUTOMATIC ID COUNT RETRIEVAL PROCESS
            ResultSet rs = stmt.executeQuery(query);//AUTOMATIC ID COUNT RETRIEVAL PROCESS
            rs.next();//first element in the table
            int id = rs.getInt(1) + 1;
            //part of adding incoming information to the database
            query = "INSERT INTO CUSTOMER VALUES(" + id + ",'" + tcNo + "','" + name + "','" + surname + "','" + email + "','" + phone + "','" + country + "','" + gender + "','" + isMarried + "','" + birthday + "')";
            stmt.executeUpdate(query);
            conn.close();
            rvalue = true;
        } catch (SQLException ex) {
            Logger.getLogger(Customer.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            if (conn != null && !conn.isClosed()) {

                conn.close();
            }
        } catch (SQLException ex) {
            Logger.getLogger(Customer.class.getName()).log(Level.SEVERE, null, ex);
        }

        return rvalue;
    }

    public boolean Delete(int id) {
        //delete the user from the database according to the incoming id
        boolean rvalue = false;
        Connection conn = null;
        try {

            conn = DriverManager.getConnection("jdbc:derby://localhost:1527/UserDB", "sa", "as");//I enter the database location and add the username and password
            Statement stmt = conn.createStatement();
            String query = "DELETE FROM CUSTOMER WHERE CUSTOMER_ID=" + id;//customer selection section according to id
            stmt.executeUpdate(query);
            conn.close();
            rvalue = true;
        } catch (SQLException ex) {
            Logger.getLogger(Customer.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            if (conn != null && !conn.isClosed()) {
                conn.close();
            }
        } catch (SQLException ex) {
            Logger.getLogger(Customer.class.getName()).log(Level.SEVERE, null, ex);
        }
        return rvalue;
    }

    public void Clear() {
        //clears all data from the screen when finished processing
        txt_tcNo.setText("");
        txt_email.setText("");
        txt_name.setText("");
        txt_phone.setText("");
        txt_surname.setText("");
        txt_birthday.setText("");
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Customer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Customer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Customer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Customer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Customer().setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_Customeradd;
    private javax.swing.JButton btn_Customerdelete;
    private javax.swing.JButton btn_Customerupdate;
    private javax.swing.JButton btn_back;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JCheckBox checkbox_ismarried;
    private javax.swing.JComboBox<String> cmbbox_country;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbl_birthday;
    private javax.swing.JLabel lbl_email;
    private javax.swing.JLabel lbl_name;
    private javax.swing.JLabel lbl_phone;
    private javax.swing.JLabel lbl_surname;
    private javax.swing.JLabel lbl_tcno;
    private javax.swing.JRadioButton rdbtn_female;
    private javax.swing.JRadioButton rdbtn_male;
    private javax.swing.JTable tbl_costumer;
    private javax.swing.JFormattedTextField txt_birthday;
    private javax.swing.JTextField txt_email;
    private javax.swing.JTextField txt_name;
    private javax.swing.JFormattedTextField txt_phone;
    private javax.swing.JTextField txt_searchbox;
    private javax.swing.JTextField txt_surname;
    private javax.swing.JTextField txt_tcNo;
    // End of variables declaration//GEN-END:variables
}
